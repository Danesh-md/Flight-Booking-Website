{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danes\\\\OneDrive\\\\Desktop\\\\Flight\\\\frontend\\\\src\\\\components\\\\TicketDetails.js\",\n  _s = $RefreshSig$();\nimport \"./TicketDetails.css\";\nimport { DomesticFlightsContext } from \"../context/FlightDataDomestic\";\nimport { CityContext } from \"../context/CityContext\";\nimport { AirportsContext } from \"../context/AirportsContext\";\nimport { useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TicketDetails = props => {\n  _s();\n  const ctx = useContext(CityContext);\n  const Domestic = useContext(DomesticFlightsContext);\n  const airport = useContext(AirportsContext);\n  function convertTimeToDuration(timeString) {\n    const [hours, minutes] = timeString.split(\":\").map(Number);\n    const durationString = `${hours}h ${minutes}m`;\n    return durationString;\n  }\n  function formatDate(dateString) {\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n    const dateParts = dateString.split(\"-\");\n    const year = dateParts[0];\n    const monthIndex = parseInt(dateParts[1]) - 1;\n    const day = parseInt(dateParts[2]);\n    const formattedDate = new Date(year, monthIndex, day);\n    const dayOfWeek = days[formattedDate.getDay()];\n    const dayOfMonth = formattedDate.getDate();\n    const month = months[monthIndex];\n    return `${dayOfWeek}, ${dayOfMonth} ${month} ${year}`;\n  }\n  const index = props.index;\n  const tempDetail = Domestic.DomesticFlights.filter(data => data.index === index);\n  const cityObj = function (cityCodes) {\n    const codes = cityCodes.find(data => data.code === tempDetail[0].origin);\n    return codes ? codes.city : \"City not found\";\n  };\n  const cityObj2 = function (cityCodes) {\n    const codes = cityCodes.find(data => data.code === tempDetail[0].destination);\n    return codes ? codes.city : \"City not found\";\n  };\n  const air = airport.Airports.find(data => data.code === tempDetail[0].origin);\n  const air2 = airport.Airports.find(data => data.code === tempDetail[0].destination);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heading\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ticket Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardWhole\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ticketDetailsInside\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"flightDetailsTicket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messageRandom\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"titleName\",\n          children: \"Online Flight Booking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(TicketDetails, \"szVNgy1Il1WVDl7MErMICkZzmq0=\");\n_c = TicketDetails;\nexport default TicketDetails;\nvar _c;\n$RefreshReg$(_c, \"TicketDetails\");","map":{"version":3,"names":["DomesticFlightsContext","CityContext","AirportsContext","useContext","jsxDEV","_jsxDEV","TicketDetails","props","_s","ctx","Domestic","airport","convertTimeToDuration","timeString","hours","minutes","split","map","Number","durationString","formatDate","dateString","months","days","dateParts","year","monthIndex","parseInt","day","formattedDate","Date","dayOfWeek","getDay","dayOfMonth","getDate","month","index","tempDetail","DomesticFlights","filter","data","cityObj","cityCodes","codes","find","code","origin","city","cityObj2","destination","air","Airports","air2","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/danes/OneDrive/Desktop/Flight/frontend/src/components/TicketDetails.js"],"sourcesContent":["import \"./TicketDetails.css\";\r\nimport { DomesticFlightsContext } from \"../context/FlightDataDomestic\";\r\nimport { CityContext } from \"../context/CityContext\";\r\nimport { AirportsContext } from \"../context/AirportsContext\";\r\nimport { useContext } from \"react\";\r\nconst TicketDetails = (props) => {\r\n  const ctx = useContext(CityContext);\r\n  const Domestic = useContext(DomesticFlightsContext);\r\n  const airport = useContext(AirportsContext);\r\n  function convertTimeToDuration(timeString) {\r\n    const [hours, minutes] = timeString.split(\":\").map(Number);\r\n\r\n    const durationString = `${hours}h ${minutes}m`;\r\n\r\n    return durationString;\r\n  }\r\n  function formatDate(dateString) {\r\n    const months = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n\r\n    const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n\r\n    const dateParts = dateString.split(\"-\");\r\n    const year = dateParts[0];\r\n    const monthIndex = parseInt(dateParts[1]) - 1;\r\n    const day = parseInt(dateParts[2]);\r\n\r\n    const formattedDate = new Date(year, monthIndex, day);\r\n\r\n    const dayOfWeek = days[formattedDate.getDay()];\r\n    const dayOfMonth = formattedDate.getDate();\r\n    const month = months[monthIndex];\r\n\r\n    return `${dayOfWeek}, ${dayOfMonth} ${month} ${year}`;\r\n  }\r\n  const index = props.index;\r\n  const tempDetail = Domestic.DomesticFlights.filter(\r\n    (data) => data.index === index\r\n  );\r\n  const cityObj = function (cityCodes) {\r\n    const codes = cityCodes.find((data) => data.code === tempDetail[0].origin);\r\n    return codes ? codes.city : \"City not found\";\r\n  };\r\n  const cityObj2 = function (cityCodes) {\r\n    const codes = cityCodes.find(\r\n      (data) => data.code === tempDetail[0].destination\r\n    );\r\n    return codes ? codes.city : \"City not found\";\r\n  };\r\n  const air = airport.Airports.find(\r\n    (data) => data.code === tempDetail[0].origin\r\n  );\r\n  const air2 = airport.Airports.find(\r\n    (data) => data.code === tempDetail[0].destination\r\n  );\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"heading\">\r\n        <h3>Ticket Details</h3>\r\n      </div>\r\n      <div className=\"cardWhole\">\r\n        {/* <div className=\"flightDetailsTicket\">\r\n          <h3>{tempDetail[0].airline}</h3>\r\n          <h5>{tempDetail[0].flight_no}</h5>\r\n        </div>\r\n        <div className=\"depart\">\r\n          <h2>{tempDetail[0].depart_time.substring(0, 5)}</h2>\r\n          <h4>{formatDate(props.departureDate)}</h4>\r\n          <h4>{cityObj(ctx.allCities)}</h4>\r\n          <h5>{air ? air.airport : \"airport not found\"}</h5>\r\n        </div>\r\n        <div className=\"timeDuration\">\r\n          <h4>{convertTimeToDuration(tempDetail[0].duration)}</h4>\r\n          <hr />\r\n        </div>\r\n        <div className=\"reach\">\r\n          <h2>{tempDetail[0].arrival_time.substring(0, 5)}</h2>\r\n          <h4>{formatDate(props.departureDate)}</h4>\r\n          <h4>{cityObj2(ctx.allCities)}</h4>\r\n          <h5>{air2 ? air2.airport : \"airport not found\"}</h5>\r\n        </div> */}\r\n\r\n        <div className=\"ticketDetailsInside\">\r\n          <h1>flightDetailsTicket</h1>\r\n        </div>\r\n        <div className=\"messageRandom\">\r\n          <h1 className=\"titleName\">Online Flight Booking</h1>\r\n          <img></img>\r\n        </div>\r\n      </div>\r\n      {/* <div className=\"unwanted\">\r\n        <p>30 kgs Check-in, 7 kgs Cabin</p>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\nexport default TicketDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}